package org.opentestsystem.ap.iat.controller;

import java.util.List;

import lombok.Data;
import lombok.extern.slf4j.Slf4j;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.core.ParameterizedTypeReference;
import org.springframework.http.HttpMethod;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.client.RestTemplate;
import org.springframework.web.servlet.ModelAndView;

@Slf4j
@Controller
public class ItemDiffController {

    private final RestTemplate restTemplate;

    @Value("${zuul.routes.ims-api.url}")
    private String imsApi;

    @Autowired
    public ItemDiffController(final RestTemplate restTemplate) {
        this.restTemplate = restTemplate;
    }

    @RequestMapping("/items/{itemId}/diff/{historyId}")
    public ModelAndView getDiff(@PathVariable String itemId, @PathVariable String historyId) {
        log.debug("Getting diff for item {} and history ID {}", itemId, historyId);

        final ResponseEntity<List<ItemDiff>> response = restTemplate.exchange
            (imsApi + "/v1/items/{itemId}/diff/{historyId}",
                HttpMethod.GET,
                null,
                new ParameterizedTypeReference<List<ItemDiff>>() {
                },
                itemId,
                historyId);

        final List<ItemDiff> diffList = response.getBody();

        String itemDiff = diffList.stream().map(diff -> diff.getDiff()).reduce("", String::concat);

        ModelAndView modelAndView = new ModelAndView();
        modelAndView.setViewName("itemdiff");
        modelAndView.addObject("diff", itemDiff);

        return modelAndView;
    }

    @Data
    public static class ItemDiff {
        private String diff;
    }
}
